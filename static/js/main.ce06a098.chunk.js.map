{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prev","name","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","clockVisibility","clockName","handleContextMenu","event","preventDefault","handleClick","currentTime","date","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAZP,gCAeE,SAAmBC,GACbA,EAAKC,OAAST,KAAKU,MAAMD,MAE3BL,QAAQO,MAAR,uBAA8BH,EAAKC,KAAnC,eAA8CT,KAAKU,MAAMD,SAlB/D,kCAsBE,WACER,OAAOW,cAAcZ,KAAKD,WAvB9B,oBA0BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKU,MAAMD,OAGb,YAED,sBAAMI,UAAU,cAAhB,SACIb,KAAKJ,MAAMC,KAAKS,cAAcC,OAAO,IAAK,YApCtD,GAA2BO,IAAMC,W,MCNjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAQX,IAAMG,EAAb,4MACExB,MAAyB,CACvByB,iBAAiB,EACjBC,UAAW,WAHf,EAMEvB,QAAU,EANZ,EAwBEwB,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKtB,SAAS,CAAEkB,iBAAiB,KA1BrC,EA6BEK,YAAc,WACZ,EAAKvB,SAAS,CAAEkB,iBAAiB,KA9BrC,EAiCEM,YAAc,SAACC,GAAD,OAAgBA,EAAKtB,cAAcC,OAAO,IAAK,IAjC/D,uDAQE,WAAqB,IAAD,OAClBP,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEmB,UAAWN,QAC1B,MAEHa,SAASC,iBAAiB,cAAe9B,KAAKuB,mBAC9CM,SAASC,iBAAiB,QAAS9B,KAAK0B,eAd5C,kCAiBE,WACEzB,OAAOW,cAAcZ,KAAKD,SAE1B8B,SAASE,oBAAoB,cAAe/B,KAAKuB,mBACjDM,SAASE,oBAAoB,QAAS/B,KAAK0B,eArB/C,oBAmCE,WACE,OACE,sBAAKb,UAAU,MAAf,UACE,6CACCb,KAAKJ,MAAMyB,iBAAmB,cAAC,EAAD,CAAOZ,KAAMT,KAAKJ,MAAM0B,mBAvC/D,GAAyBR,IAAMC,WCZ/BiB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.ce06a098.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  time: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line\n      console.info(this.state.time.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prev: Readonly<Props>) {\n    if (prev.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prev.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          { this.state.time.toUTCString().slice(-12, -4) }\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockVisibility: boolean,\n  clockName: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    clockVisibility: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ clockVisibility: false });\n  };\n\n  handleClick = () => {\n    this.setState({ clockVisibility: true });\n  };\n\n  currentTime = (date: Date) => date.toUTCString().slice(-12, -4);\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.clockVisibility && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}